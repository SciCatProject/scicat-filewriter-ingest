---
# 
# derived from kafka-ui docker compose example
# accessible at: https://github.com/provectus/kafka-ui/tree/master/documentation/compose
#
version: '2'
services:

  kafka-ui:
    container_name: sfidev-kafka-ui
    hostname: sfidev-kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: sfidev
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: sfidev-kafka:29092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    hostname: sfidev-kafka
    container_name: sfidev-kafka
    ports:
      - "9092:9092"
      - "9997:9997"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: 'PLAINTEXT://sfidev-kafka:29092,CONTROLLER://sfidev-kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://sfidev-kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=sfidev-kafka -Dcom.sun.management.jmxremote.rmi.port=9997
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@sfidev-kafka:29093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'        
    volumes:
      - ./scripts/update_run.sh:/tmp/update_run.sh
    command: "bash -c 'if [ ! -f /tmp/update_run.sh ]; then echo \"ERROR: Did you forget the update_run.sh file that came with this docker-compose.yml file?\" && exit 1 ; else /tmp/update_run.sh && /etc/confluent/docker/run ; fi'"

  kafka-init-topics:
    image: confluentinc/cp-kafka:7.2.1
    hostname: sfidev-init
    container_name: sfidev-init
    volumes:
       - ./message.json:/data/message.json
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
               cub kafka-ready -b sfidev-kafka:29092 1 30 && \
               kafka-topics --create --topic dev_filewriter --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server sfidev-kafka:29092 && \
               kafka-topics --create --topic test-topic --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server sfidev-kafka:29092 && \
               kafka-console-producer --bootstrap-server sfidev-kafka:29092 -topic test-topic < /data/message.json'"

  generator:
    image: jupyter/scipy-notebook:latest
    hostname: sfidev-generator
    container_name: sfidev-generator
    volumes:
      - ../generator:/home/jovyan/work
    ports:
      - 8081:8888
    depends_on:
      - kafka
#    extra_host:
#      - "host.docker.internal:host-gateway"
